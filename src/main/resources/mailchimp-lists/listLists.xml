<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="listLists" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="fields" description="A comma-separated list of fields to return."/>
    <parameter name="excludeFields" description="A comma-separated list of fields to exclude."/>
    <parameter name="count" description="The number of records to return."/>
    <parameter name="offset" description="The number of records from a collection to skip."/>
    <parameter name="beforeCampaignLastSent" description="The lists created before the last campaign send date."/>
    <parameter name="sinceCampaignLastSent" description="The lists created after the last campaign send date."/>
    <parameter name="beforeDateCreated" description="The lists created before the set date."/>
    <parameter name="sinceDateCreated" description="The lists created after the set date."/>
    <parameter name="email" description="The specific subscriberâ€™s email address."/>
    <sequence>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="uri.var.excludeFields" expression="$func:excludeFields"/>
        <property name="uri.var.count" expression="$func:count"/>
        <property name="uri.var.offset" expression="$func:offset"/>
        <property name="uri.var.beforeCampaignLastSent" expression="$func:beforeCampaignLastSent"/>
        <property name="uri.var.sinceCampaignLastSent" expression="$func:sinceCampaignLastSent"/>
        <property name="uri.var.beforeDateCreated" expression="$func:beforeDateCreated"/>
        <property name="uri.var.sinceDateCreated" expression="$func:sinceDateCreated"/>
        <property name="uri.var.email" expression="$func:email"/>
        <script language="js">
            <![CDATA[
            var fields = mc.getProperty('uri.var.fields');
            var excludeFields = mc.getProperty('uri.var.excludeFields');
            var count = mc.getProperty('uri.var.count');
            var offset = mc.getProperty('uri.var.offset');
            var beforeCampaignLastSent = mc.getProperty('uri.var.beforeCampaignLastSent');
            var sinceCampaignLastSent = mc.getProperty('uri.var.sinceCampaignLastSent');
            var beforeDateCreated = mc.getProperty('uri.var.beforeDateCreated');
            var sinceDateCreated = mc.getProperty('uri.var.sinceDateCreated');
            var email = mc.getProperty('uri.var.email');
            var urlQuery="";

            if (fields != null && fields != ""){
                urlQuery += 'fields=' + fields + '&';
            }
            if (excludeFields != null && excludeFields != ""){
                urlQuery += 'exclude_fields=' + excludeFields + '&';
            }
            if (count != null && count != ""){
                urlQuery += 'count=' + count + '&';
            }
            if (offset != null && offset != ""){
                urlQuery += 'offset=' + offset + '&';
            }
            if (beforeCampaignLastSent != null && beforeCampaignLastSent != ""){
                urlQuery += 'before_campaign_last_sent=' + beforeCampaignLastSent + '&';
            }
            if (sinceCampaignLastSent != null && sinceCampaignLastSent != ""){
                urlQuery += 'since_campaign_last_sent=' + sinceCampaignLastSent + '&';
            }
            if (beforeDateCreated != null && beforeDateCreated != ""){
                urlQuery += 'before_date_created=' + beforeDateCreated + '&';
            }
            if (sinceDateCreated != null && sinceDateCreated != ""){
                urlQuery += 'since_date_created=' + sinceDateCreated + '&';
            }
            if (email != null && email != ""){
                urlQuery += 'email=' + email + '&';
            }
            if (urlQuery != null && urlQuery != ""){
                urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
                mc.setProperty('uri.var.urlQuery',urlQuery);
            }
         ]]>
        </script>
        <property name="Accept-Encoding" scope="transport" action="remove"/>
        <filter source="$ctx:mailchimpBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="GET" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/lists{+uri.var.urlQuery}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="GET" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/lists{+uri.var.urlQuery}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>