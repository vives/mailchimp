<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->

<template name="createList" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="name" description="The name of the list."/>
    <parameter name="company" description="The street address for the list contact."/>
    <parameter name="address1" description="The street address for the list contact."/>
    <parameter name="address2" description="The receiver of the mail."/>
    <parameter name="city" description="The city for the list contact."/>
    <parameter name="state" description="The state for the list contact."/>
    <parameter name="zip" description="The postal or zip code for the list contact."/>
    <parameter name="country" description="A two-character ISO3166 country code. Defaults to US if invalid."/>
    <parameter name="phone" description="The phone number for the list contact."/>
    <parameter name="permissionReminder" description="The permission reminder for the list."/>
    <parameter name="useArchiveBar"
               description="Boolean type, whether campaigns for this list use the Archive Bar in archives by default."/>
    <parameter name="fromName" description="The from name for campaigns sent to this list."/>
    <parameter name="fromEmail" description="The from email for campaigns sent to this list."/>
    <parameter name="subject" description="The subject line for campaigns sent to this list."/>
    <parameter name="language" description="The language for this listsâ€™s forms."/>
    <parameter name="notifyOnSubscribe" description="The email address to send subscribe notifications."/>
    <parameter name="notifyOnUnubcribe" description="The email address to send unsubscribe notifications."/>
    <parameter name="emailTypeOption" description="Boolean type, whether the list supports multiple formats for emails."/>
    <parameter name="visibility" description="Whether the list is public or private."/>

    <sequence>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.company" expression="$func:company"/>
        <property name="uri.var.address1" expression="$func:address1"/>
        <property name="uri.var.address2" expression="$func:address2"/>
        <property name="uri.var.city" expression="$func:city"/>
        <property name="uri.var.state" expression="$func:state"/>
        <property name="uri.var.zip" expression="$func:zip"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.phone" expression="$func:phone"/>
        <property name="uri.var.permissionReminder" expression="$func:permissionReminder"/>
        <property name="uri.var.useArchiveBar" expression="$func:useArchiveBar"/>
        <property name="uri.var.fromName" expression="$func:fromName"/>
        <property name="uri.var.fromEmail" expression="$func:fromEmail"/>
        <property name="uri.var.subject" expression="$func:subject"/>
        <property name="uri.var.language" expression="$func:language"/>
        <property name="uri.var.notifyOnSubscribe" expression="$func:notifyOnSubscribe"/>
        <property name="uri.var.notifyOnUnsubscribe" expression="$func:notifyOnUnsubscribe"/>
        <property name="uri.var.emailTypeOption" expression="$func:emailTypeOption"/>
        <property name="uri.var.visibility" expression="$func:visibility"/>

        <filter source="boolean($ctx:uri.var.useArchiveBar)" regex="true">
            <then>
                <property name="uri.var.useArchiveBar" expression="$func:useArchiveBar"/>
            </then>
            <else>
                <property name="uri.var.useArchiveBar" value="true"/>
            </else>
        </filter>
        <payloadFactory media-type="json">
            <format>
                {
                "name":"$1",
                "contact":{
                "company":"$2",
                "address1":"$3",
                "city":"$4",
                "state":"$5",
                "zip":"$6",
                "country":"$7"
                },
                "permission_reminder":"$8",
                "campaign_defaults":{
                "from_name":"$9",
                "from_email":"$10",
                "subject":"$11",
                "language":"$12"
                },
                "email_type_option":$13,
                "use_archive_bar":$14
                }
            </format>
            <args>
                <arg expression="$ctx:uri.var.name"/>
                <arg expression="$ctx:uri.var.company"/>
                <arg expression="$ctx:uri.var.address1"/>
                <arg expression="$ctx:uri.var.city"/>
                <arg expression="$ctx:uri.var.state"/>
                <arg expression="$ctx:uri.var.zip"/>
                <arg expression="$ctx:uri.var.country"/>
                <arg expression="$ctx:uri.var.permissionReminder"/>
                <arg expression="$ctx:uri.var.fromName"/>
                <arg expression="$ctx:uri.var.fromEmail"/>
                <arg expression="$ctx:uri.var.subject"/>
                <arg expression="$ctx:uri.var.language"/>
                <arg expression="$ctx:uri.var.emailTypeOption"/>
                <arg expression="$ctx:uri.var.useArchiveBar"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
                var payload = mc.getPayloadJSON();
                var address2 = mc.getProperty('uri.var.address2');
                var phone = mc.getProperty('uri.var.phone');
                var company = mc.getProperty('uri.var.company');
                var notifyOnSubscribe = mc.getProperty('uri.var.notifyOnSubscribe');
                var notifyOnUnsubscribe = mc.getProperty('uri.var.notifyOnUnsubscribe');
                var visibility = mc.getProperty('uri.var.visibility');

                if (address2 != null && address2 != "") {
                    payload.contact.address2 = address2;
                }
                if (phone != null && phone != "") {
                    payload.contact.phone = phone;
                }
                if (notifyOnSubscribe != null && notifyOnSubscribe != "") {
                    payload.notify_on_subscribe = notifyOnSubscribe;
                }
                if (notifyOnUnsubscribe != null && notifyOnUnsubscribe != "") {
                    payload.notify_on_unsubscribe = notifyOnUnsubscribe;
                }
                if (visibility != null && visibility != "") {
                    payload.visibility = visibility;
                }
                mc.setPayloadJSON(payload);
             ]]>
        </script>
        <property name="messageType" value="application/json" scope="axis2"/>
        <property name="DISABLE_CHUNKING" value="true" scope="axis2"/>
        <property name="Accept-Encoding" scope="transport" action="remove"/>
        <filter source="$ctx:mailchimpBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="POST" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/lists"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="POST" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/lists"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>