<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="searchCampaign" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="fields" description="A comma-separated list of fields to return."/>
    <parameter name="excludeFields" description="A comma-separated list of fields to exclude."/>
    <parameter name="query" description="The search query used to filter results."/>
    <parameter name="snipStart" description="The starting string value to match highlighted with something."/>
    <parameter name="snipEnd" description="The ending string value to match highlighted with something."/>
    <parameter name="offset" description="The number of instances to skip from the beginning of the collection."/>
    <sequence>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="uri.var.excludeFields" expression="$func:excludeFields"/>
        <property name="uri.var.query" expression="$func:query"/>
        <property name="uri.var.snipStart" expression="$func:snipStart"/>
        <property name="uri.var.snipEnd" expression="$func:snipEnd"/>
        <property name="uri.var.offset" expression="$func:offset"/>
        <script language="js">
            <![CDATA[
            var fields = mc.getProperty('uri.var.fields');
            var excludeFields = mc.getProperty('uri.var.excludeFields');
            var query = mc.getProperty('uri.var.query');
            var snipStart = mc.getProperty('uri.var.snipStart');
            var snipEnd = mc.getProperty('uri.var.snipEnd');
            var offset = mc.getProperty('uri.var.offset');
            var urlQuery="";

            if (fields != null && fields != ""){
                urlQuery += 'fields=' + fields + '&';
            }
            if (excludeFields != null && excludeFields != ""){
                urlQuery += 'exclude_fields=' + excludeFields + '&';
            }
            if (query != null && query != ""){
                urlQuery += 'query=' + query + '&';
            }
            if (snipStart != null && snipStart != ""){
                urlQuery += 'snip_start=' + snipStart + '&';
            }
            if (snipEnd != null && snipEnd != ""){
                urlQuery += 'snip_end=' + snipEnd + '&';
            }
            if (offset != null && offset != ""){
                urlQuery += 'offset=' + offset + '&';
            }
            if (urlQuery != null && urlQuery != ""){
                urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
                mc.setProperty('uri.var.urlQuery',urlQuery);
            }
         ]]>
        </script>
        <property name="Accept-Encoding" scope="transport" action="remove"/>
        <filter source="$ctx:mailchimpBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="GET"
                              uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/search-campaigns{+uri.var.urlQuery}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="GET"
                              uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/search-campaigns{+uri.var.urlQuery}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>